正课: 
1. ECMAScript5.0
   1. 对象:
     对象的本质: 属性的集合
     对象的属性: 
       命名属性: 可直接通过.访问到的属性
         数据属性: 专门保存一个值的属性
         访问器属性: 保护数据属性的特殊属性
       内部属性: 不能通过.直接访问的属性
         比如: class   __proto__

     数据属性: 4大特性: 描述属性的配置信息
       value: 实际存储属性值的特性
       writable: 定义了当前属性是否可修改
                默认true
                如果改为false，当前属性变为只读
       enumerable: 定义能否被for in遍历到
                默认true
                如果改为false，当前属性在for in时不会被遍历
                但是，使用.依然可正常访问
       configurable: 定义了属性能否被删除或能否修改其他特性
                默认true
                如果改为false，不能删除当前属性
                             也不能修改当前属性的其他特性
                          ***不可逆

     如何获取四大特性:
       var 数性描述对象=
	Object.getOwnPropertyDescriptor(obj,"属性名");
     如何修改四大特性: 
       Object.defineProperty(obj,"属性名",{
           需要修改的特性
       }) 
       特例: 如果obj中包含指定属性，则修改现有属性的值
            如果obj中不包含指定属性，则在obj中自动添加新属性

     特性的默认值: 
       1. 属性在创建对象时就定义好了：所有特性的默认值都为true
       2. 使用defineProperty添加的属性，特性的默认值都为false
          所以，在使用defineProperty添加属性时，必须显式定义属性的特性为true，否则默认都为false

     访问器属性: 
       getter/setter访问器: 两个专门操作1个变量的方法
          其中get方法负责读取变量的值
              set方法负责修改变量的值
       四大特性:
         get:function(){return 局部变量的值;}
         set:function(value){
           先验证value是否符合要求
	     局部变量=value;
         }
         enumerable:
         configurable:
       如何定义访问器属性: 
          Object.defineProperty(obj,"属性名",{
              访问器属性的四大特性
          })
       何时调用get/set： 
          试图通过访问器属性取值时，自动调用get特性的函数
          试图通过访问器属性设置值时，自动调用set特性的函数
              一般在set中设置对要设置的新值得验证
       	  特殊: 如果省略set特性，则该属性为只读

    2. Object.create(): 基于指定父对象，创建并扩展子对象
         做3件事: 1. 创建一个新对象
                  2. 设置新对象继承父对象
                  3. 为新对象扩展新属性
         何时使用: 只要基于现有的父对象，创建并扩展一个新的子对象时。
         如何使用: var son=Object.create(father,{
                      新属性:{属性的四大特性},
                      ...:{...}
                   });









