正课:
1. *****面向对象: OOP
   什么是对象: 内存中集中存储多个数据或函数的存储空间，再起一个名字。
         对象是程序中描述现实中一个具体事物的属性和功能的结构
   什么是面向对象: 程序中都是先用对象描述现实中一个具体事物，然后再访问对象的属性和功能。
   为什么面向对象: 现实中，一个属性或一个功能都必须依附在一个具体的事物上才有意义！不同的事物，即使是同一功能，它的定义也可能不一样。
   
   如何使用面向对象: 
       1. 先创建对象: ――封装
          描述现实中一个事物，需要两类成员: 
             1.事物的属性，会成为程序中对象的属性
                 属性: 对象中存储一个数据的变量
             2.事物的功能，会成为程序中对象的方法
                 方法: 保存在对象中的一个函数
             属性和方法统称为: 对象的成员
          将一个事物的属性和方法集中定义在一个对象中。
          3种:
          1. 直接量,创建*一个*独特的对象:
            var obj={
	        属性名:属性值,
                ...:...,
                方法名:function(...){...},
                ...:...
            }
    *****js中一切都是对象！对象的底层都是关联数组！
       	    1. 每个成员名其实都是字符串，但对象中成员名的引号可省略
       	    2. 都可用for in遍历对象的每个成员
            3. 对象也可在任何时候添加新成员
         对象自己的方法，如何使用自己的属性: 
    *****this: 在函数调用时，引用正在调用函数的对象 的变量
               其实就是.前的对象
            不使用任何对象调用的函数，this默认是window

          2.用new关键字: var obj=new Object();//创建一个空对象
                         obj.属性名=值;
                         obj.方法名=function(){...}

     *****3.使用构造函数，反复创建*多个*相同结构的对象: 
            构造函数: 专门描述一类对象的结构的函数 
            为什么: 代码重用！
            如何使用: 2步:
             1. 定义构造函数/类型: 
	       function 类型名/构造函数名(属性参数,...){
                   为当前对象添加指定属性，赋值为属性参数的值:
                   比如: this.属性名=属性参数
                         this.方法名=functon(...){...}
               }
             2. 调用构造函数创建对象，也称为创建类型的一个实例
                ――也称为实例化！
               var obj=new 构造函数名/类型名(属性值列表,...);
               new执行了4个操作：
                1. 创建一个空对象
                2. ?
                3. 用新对象调用构造函数
                4. 返回新对象的地址给变量

       2. 访问对象成员: 
         1. 访问属性: 对象.属性名 -> 和变量完全一样
         2. 调用方法: 对象.方法名() -> 和函数完全一样














