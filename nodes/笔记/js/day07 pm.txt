正课:
1. ***Function 
  ***匿名函数
  ***作用域和作用域链
  *****闭包

1. ***Function
   ***匿名函数: 定义时，没有给定函数名的函数
   为什么: 为了一次性使用，节省内存空间
   何时使用: 只要一个函数，只执行一次，都要用匿名函数
   如何使用: 
      1. 回调: 将函数作为对象交给别的函数去调用
           函数的调用时机，次数，以及参数与函数定义者无关
      2. 自调: 定义完函数，立刻调用
         (function(...){...})();
   作用域和作用域链: 
     作用域: 变量的可用范围
       1. 全局作用域: 全局变量，随处可用，可反复使用
       2. 函数作用域: 局部变量，仅函数内可用，函数调用后释放
     作用域链: 从当前函数的AO到全局对象window形成的链式结构

   *****闭包: 保护并重用局部变量的机制
    为什么: 全局变量: 优: 随处可用，可重用，缺: 易被污染
            局部变量: 优: 仅在函数内用，安全，缺: 不可重用
    何时使用: 希望重用一个变量，又不希望被污染时-保护局部变量
    如何定义: 3步: 
      1. 定义受保护的局部变量
      2. 定义内层函数专门操作受保护的变量
      3. 定义外层函数将受保护的变量和操作变量的函数封装起来，外层函数将内层函数返回到外部
    
    鄙视时: 
    判断闭包: 1. 局部变量  2. 内层函数  3. 外层函数
    判断输出: 
       1. 找到受保护的局部变量，判断外层函数调用后，它的值
       2. 同一次外层函数调用返回的多个内层对象，操作的是同一个受保护的变量。      














